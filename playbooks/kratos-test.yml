- hosts: all
  gather_facts: false
  become: true
  vars:
    UNIQUE_RANCHER_DOMAIN: mcm.devops.kratosdefense.com
    BOOSTRAP_PWD: Changeme123!
    RANCHER_VERSION: 2.6.8
  tasks:
    - name: Add Kubernetes repository
      yum_repository:
        name: kubernetes
        description: Kubernetes repo
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        gpgcheck: yes
        enabled: yes
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: Install kubectl
      yum:
        name: kubectl
        state: present

    - name: Set environment variables
      shell:
        cmd: |
          export UNIQUE_RANCHER_DOMAIN={{ UNIQUE_RANCHER_DOMAIN }}
          export BOOSTRAP_PWD={{ BOOSTRAP_PWD }}
          export RANCHER_VERSION={{ RANCHER_VERSION }}

    - name: Get priority classes
      shell:
        cmd: kubectl get priorityclasses

    - name: Create cattle-system namespace
      shell:
        cmd: kubectl create namespace cattle-system

    - name: Create tls-ca secret
      shell:
        cmd: kubectl -n cattle-system create secret generic tls-ca --from-file=./tls.crt

    - name: Add rancher-stable helm repository
      shell:
        cmd: helm repo add rancher-stable https://releases.rancher.com/server-charts/stable

    - name: Apply cert-manager crds
      shell:
        cmd: kubectl apply -f cert-manager.crds.1.7.1.yaml

    - name: Upgrade/install rancher chart
      shell:
        cmd: |
          /usr/local/bin/helm upgrade --install rancher rancher-stable/rancher \
          --namespace cattle-system \
          --set hostname=$UNIQUE_RANCHER_DOMAIN \
          --set rancherImageTag=v${RANCHER_VERSION} \
          --set privateCA=false \
          --set ingress.tls.source=secret \
          --set bootstrapPassword=$BOOSTRAP_PWD

    - name: Create tls-rancher-ingress secret
      shell:
        cmd: kubectl create secret tls -n cattle-system tls-rancher-ingress --cert=tls.crt --key=tls.key

    - name: Create tls-rancher secret
      shell:
        cmd: kubectl create secret tls -n cattle-system tls-rancher --cert=tls.crt --key=tls.key

    - name: Get bootstrap password
      shell:
        cmd: kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{.data.bootstrapPassword|base64decode}}{{ "\n" }}'
      register: bootstrap_pwd

    - name: Wait for rancher deployment to be ready
      shell:
        cmd: kubectl -n cattle-system rollout status deploy/rancher

    - name: Get rancher deployment
      shell:
        cmd: kubectl -n cattle-system get deploy rancher